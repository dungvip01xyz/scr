local Players = game:GetService("Players")
local player = Players.LocalPlayer
local function teleportAllToOrigin()
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= player and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
            plr.Character:SetPrimaryPartCFrame(CFrame.new(0,0,0))
            local humanoid = plr.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = 0
                humanoid.JumpPower = 0
            end
        end
    end
end
-- H√†m t·∫°o label tr√™n ƒë·∫ßu nh√¢n v·∫≠t
-- H√†m t·∫°o label tr√™n ƒë·∫ßu nh√¢n v·∫≠t (t·ª± bi·∫øn m·∫•t sau 3 gi√¢y)
local function addBillboard(plr, text)
    if not (plr.Character and plr.Character:FindFirstChild("Head")) then return end

    -- X√≥a n·∫øu c√≥ c≈©
    local oldGui = plr.Character.Head:FindFirstChild("BillboardGui")
    if oldGui then oldGui:Destroy() end

    local billboard = Instance.new("BillboardGui")
    billboard.Name = "BillboardGui"
    billboard.Adornee = plr.Character.Head
    billboard.Size = UDim2.new(0, 200, 0, 50)
    billboard.StudsOffset = Vector3.new(0, 4, 0) -- cao l√™n tr√™n ƒë·∫ßu
    billboard.AlwaysOnTop = true
    billboard.Parent = plr.Character.Head

    local label = Instance.new("TextLabel", billboard)
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = Color3.fromRGB(255, 0, 0)
    label.TextScaled = true
    label.Font = Enum.Font.SourceSansBold

    -- X√≥a sau 3 gi√¢y
    game:GetService("Debris"):AddItem(billboard, 3)
end


-- L·∫•y v·ªã tr√≠ c·ªßa ch√≠nh m√¨nh
local function getMyPosition()
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        return player.Character.HumanoidRootPart.Position
    end
end

-- GUI
local ScreenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
local Frame = Instance.new("Frame", ScreenGui)
Frame.Size = UDim2.new(0, 200, 0, 300)
Frame.Position = UDim2.new(0.7, 0, 0.3, 0)
Frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)

local UIListLayout = Instance.new("UIListLayout", Frame)

-- H√†m play animation
local function playAnimation(plr, animationId)
    if not (plr.Character and plr.Character:FindFirstChild("Humanoid")) then return end
    local humanoid = plr.Character.Humanoid

    local anim = Instance.new("Animation")
    anim.AnimationId = "rbxassetid://" .. animationId

    local track = humanoid:LoadAnimation(anim)
    track.Looped = true
    track:Play()
end

-- H√†m x·ª≠ l√Ω ch·ªçn 1 ng∆∞·ªùi v√† d·ªãch chuy·ªÉn
local function handlePlayer(plr)
    if not (player.Character and player.Character:FindFirstChild("HumanoidRootPart")) then return end
    if not (plr.Character and plr.Character:FindFirstChild("HumanoidRootPart")) then return end

    local myHRP = player.Character.HumanoidRootPart

    -- T√≠nh v·ªã tr√≠ ngay TR∆Ø·ªöC m·∫∑t b·∫°n (5 stud)
    local targetPos = myHRP.Position + (myHRP.CFrame.LookVector * 8)

    -- Xoay ng∆∞·ªùi ch∆°i sao cho h·ªç nh√¨n v·ªÅ ph√≠a b·∫°n
    local targetCFrame = CFrame.lookAt(targetPos, myHRP.Position)

    -- ƒê·∫∑t nh√¢n v·∫≠t t·ªõi v·ªã tr√≠ + h∆∞·ªõng mong mu·ªën
    plr.Character:SetPrimaryPartCFrame(targetCFrame)

    -- Kh√≥a l·∫°i ƒë·ªÉ h·ªç kh√¥ng di chuy·ªÉn
    local humanoid = plr.Character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.WalkSpeed = 0
        humanoid.JumpPower = 0
    end

    -- Play animation Dance (t√πy ch·ªçn)
    playAnimation(plr, 507770239)
end

-- N√∫t ch·ªçn ng·∫´u nhi√™n
local randomBtn = Instance.new("TextButton")
randomBtn.Size = UDim2.new(1, 0, 0, 30)
randomBtn.Text = "üé≤ Random Player"
randomBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 120)
randomBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
randomBtn.Parent = Frame

randomBtn.MouseButton1Click:Connect(function()
    local finalPlr = nil -- l∆∞u ng∆∞·ªùi ƒë∆∞·ª£c ch·ªçn cu·ªëi c√πng
    local delay = 0.05   -- b·∫Øt ƒë·∫ßu nhanh

    for i = 1, 50 do
        teleportAllToOrigin()

        -- Ch·ªçn random
        local allPlayers = Players:GetPlayers()
        local candidates = {}
        for _, plr in ipairs(allPlayers) do
            if plr ~= player then
                table.insert(candidates, plr)
            end
        end

        if #candidates > 0 then
            finalPlr = candidates[math.random(1, #candidates)]
            handlePlayer(finalPlr) -- d·ªãch ra tr∆∞·ªõc m·∫∑t b·∫°n v√† ƒë·ªëi di·ªán
        end

        wait(delay)

        -- tƒÉng delay d·∫ßn ƒë·ªÉ random ch·∫≠m l·∫°i
        delay = math.min(delay + 0.005, 0.3)
    end

    -- Sau v√≤ng l·∫∑p, g·∫Øn ch·ªØ tr√™n ƒë·∫ßu ng∆∞·ªùi ch∆°i cu·ªëi c√πng
    if finalPlr then
        addBillboard(finalPlr, "üéâ Ch√∫c M·ª´ng üéâ")
    end
end)

-- H√†m t·∫°o n√∫t cho t·ª´ng ng∆∞·ªùi ch∆°i
local function createPlayerButton(plr)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, 0, 0, 30)
    btn.Text = plr.Name
    btn.Parent = Frame

    btn.MouseButton1Click:Connect(function()
        handlePlayer(plr)
    end)
end

-- T·∫°o n√∫t cho t·∫•t c·∫£ ng∆∞·ªùi ch∆°i c√≥ s·∫µn
for _, plr in ipairs(Players:GetPlayers()) do
    if plr ~= player then
        createPlayerButton(plr)
    end
end

-- T·∫°o n√∫t khi c√≥ ng∆∞·ªùi m·ªõi join
Players.PlayerAdded:Connect(function(plr)
    if plr ~= player then
        createPlayerButton(plr)
    end
end)
-- Cho ph√©p di chuy·ªÉn GUI b·∫±ng chu·ªôt
local UserInputService = game:GetService("UserInputService")

local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    Frame.Position = UDim2.new(
        startPos.X.Scale,
        startPos.X.Offset + delta.X,
        startPos.Y.Scale,
        startPos.Y.Offset + delta.Y
    )
end

Frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = Frame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

Frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)
