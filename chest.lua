local TweenService = game:GetService("TweenService")
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local chestsFolder = game.Workspace:FindFirstChild("ChestModels")

if not chestsFolder then
    warn("Kh√¥ng t√¨m th·∫•y th∆∞ m·ª•c ChestModels!")
    return
end

-- üñ•Ô∏è T·∫°o GUI hi·ªÉn th·ªã s·ªë r∆∞∆°ng
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")

local chestCounter = Instance.new("TextLabel")
chestCounter.Size = UDim2.new(0, 200, 0, 50)
chestCounter.Position = UDim2.new(0.5, -100, 0.1, 0)
chestCounter.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
chestCounter.TextColor3 = Color3.new(1, 1, 1)
chestCounter.TextSize = 24
chestCounter.Parent = screenGui

-- üéõÔ∏è T·∫°o n√∫t b·∫≠t/t·∫Øt
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 150, 0, 50)
toggleButton.Position = UDim2.new(0.5, -75, 0.2, 0)
toggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
toggleButton.TextColor3 = Color3.new(1, 1, 1)
toggleButton.TextSize = 24
toggleButton.Text = "B·∫≠t d·ªãch chuy·ªÉn"
toggleButton.Parent = screenGui

local isMoving = false -- Bi·∫øn ki·ªÉm so√°t tr·∫°ng th√°i b·∫≠t/t·∫Øt

-- üîÑ C·∫≠p nh·∫≠t s·ªë r∆∞∆°ng
local function updateChestCount(count)
    chestCounter.Text = "R∆∞∆°ng c√≤n l·∫°i: " .. count
end

-- üèÉ H√†m di chuy·ªÉn ƒë·∫øn 1 v·ªã tr√≠
local function moveToPosition(targetPosition, speed)
    local tweenInfo = TweenInfo.new(speed, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
    local goal = {CFrame = CFrame.new(targetPosition)}
    local tween = TweenService:Create(humanoidRootPart, tweenInfo, goal)
    tween:Play()
    tween.Completed:Wait() -- ƒê·ª£i di chuy·ªÉn xong
end

-- üöÄ H√†m t·ª± ƒë·ªông di chuy·ªÉn qua t·ª´ng r∆∞∆°ng
local function autoMoveToChests()
    if not isMoving then return end -- N·∫øu t·∫Øt th√¨ d·ª´ng
    
    local chests = chestsFolder:GetChildren()
    updateChestCount(#chests) -- Hi·ªÉn th·ªã s·ªë r∆∞∆°ng ban ƒë·∫ßu

    for _, chest in ipairs(chests) do
        if not isMoving then return end -- N·∫øu b·ªã t·∫Øt gi·ªØa ch·ª´ng th√¨ d·ª´ng ngay
        local chestRoot = chest:FindFirstChild("HumanoidRootPart") or chest:FindFirstChild("PrimaryPart")
        if chestRoot then
            moveToPosition(chestRoot.Position, 3) -- Di chuy·ªÉn v·ªõi t·ªëc ƒë·ªô 3 gi√¢y
            chest:Destroy() -- X√≥a r∆∞∆°ng khi ƒë·∫øn n∆°i
            updateChestCount(#chestsFolder:GetChildren()) -- C·∫≠p nh·∫≠t s·ªë r∆∞∆°ng
        end
    end
end

-- üéõÔ∏è X·ª≠ l√Ω khi b·∫•m n√∫t b·∫≠t/t·∫Øt
toggleButton.MouseButton1Click:Connect(function()
    isMoving = not isMoving -- ƒê·∫£o tr·∫°ng th√°i
    toggleButton.Text = isMoving and "T·∫Øt d·ªãch chuy·ªÉn" or "B·∫≠t d·ªãch chuy·ªÉn"

    if isMoving then
        autoMoveToChests()
    end
end)

-- üî• C·∫≠p nh·∫≠t s·ªë r∆∞∆°ng ban ƒë·∫ßu
updateChestCount(#chestsFolder:GetChildren())
